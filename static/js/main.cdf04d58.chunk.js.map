{"version":3,"sources":["apis/streams.js","history.js","actions/index.js","actions/types.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamEdit.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","createBrowserHistory","fetchStream","id","dispatch","a","async","streams","get","response","type","payload","data","StreamForm","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description1","description2","img","StreamCreate","createStream","connect","getState","userId","auth","post","console","log","history","push","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","StreamDelete","match","params","Fragment","deleteStream","to","stream","renderContent","renderActions","state","ownProps","delete","StreamEdit","editStream","initialValues","_","pick","patch","StreamList","fetchStreams","currentUserId","map","key","renderAdmin","src","description3","description4","description5","isSignedIn","style","textAlign","renderList","renderCreate","Object","values","StreamShow","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","App","path","exact","INITIAL_STATE","combineReducers","action","formReducer","mapKeys","omit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.cdf04d58.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://www.mocky.io/v2/5e44593331000098df3b06a6'\r\n})\r\n","import { createBrowserHistory } from 'history'; \r\nexport default createBrowserHistory();","import streams from '../apis/streams';\r\nimport history from '../history';\r\nimport { \r\n  SIGN_IN,\r\n  SIGN_OUT ,\r\n  CREATE_STREAM,\r\n  FETCH_STREAMS,\r\n  FETCH_STREAM,\r\n  DELETE_STREAM,\r\n  EDIT_STREAM\r\n  } from './types';\r\n\r\nexport const signIn = userId => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: userId\r\n\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT\r\n\r\n  }\r\n}\r\n\r\nexport const createStream = formValues => async (dispatch, getState )=> {\r\n  const {userId} = getState().auth;\r\n  const response =  await streams.post('/streams', {...formValues, userId});\r\n  dispatch({ type: CREATE_STREAM, payload: response.data})\r\n  console.log(response.data)\r\n  history.push('/')\r\n}\r\n\r\nexport const fetchStreams = id => async dispatch => {\r\n  const response = await streams.get('/streams');\r\n  dispatch({type: FETCH_STREAMS, payload: response.data})\r\n}\r\n\r\nexport const fetchStream = (id) => async dispatch => {\r\n  const response = await streams.get(`/streams/${id}`);\r\n  dispatch({type: FETCH_STREAM, payload: response.data})\r\n}\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n  const response = await streams.patch(`/streams/${id}`, formValues);\r\n  dispatch({type: EDIT_STREAM, payload: response.data});\r\n  history.push('/')\r\n}\r\n\r\nexport const deleteStream = (id) => async dispatch => {\r\n   await streams.delete(`/streams/${id}`);\r\n  dispatch({type: DELETE_STREAM, payload: id});\r\n  history.push('/')\r\n}","export const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const CREATE_STREAM = 'CREATE_STREAM';\r\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\r\nexport const FETCH_STREAM = 'FETCH_STREAM';\r\nexport const DELETE_STREAM = 'DELETE_STREAM';\r\nexport const EDIT_STREAM = 'EDIT_STREAM'\r\n","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport \"../../styles/Global.css\";\r\n\r\n\r\nclass StreamForm extends React.Component {\r\n\r\n  renderError({error, touched})  {\r\n    if(touched && error) {\r\n      return (\r\n        <div className=\"ui error message\">\r\n          <div className=\"header\">\r\n            {error}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  renderInput = ({input, label, meta}) => {\r\n    const className = `field ${meta.error && meta.touched ? 'error': ''}`\r\n    return (\r\n    <div className={className}>\r\n    <label>{label}</label>\r\n    <input {...input} autoComplete=\"off\"/>\r\n    {this.renderError(meta)}\r\n    </div>\r\n    )\r\n  }\r\n\r\n  onSubmit = (formValues) => {\r\n    this.props.onSubmit(formValues);\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\r\n        <Field name=\"title\" component={this.renderInput} label=\"Insira um Título\" />\r\n        <Field name=\"description1\" component={this.renderInput} type=\"text\" \r\n        label=\"Descrição 1\" />\r\n         <Field name=\"description2\" component={this.renderInput} type=\"text\" \r\n        label=\"Descrição 2\" />\r\n         <Field name=\"description3\" component={this.renderInput} type=\"text\" \r\n        label=\"Descrição 3\" />\r\n         <Field name=\"description4\" component={this.renderInput} type=\"text\" \r\n        label=\"Descrição 4\" />\r\n         <Field name=\"description5\" component={this.renderInput} type=\"text\" \r\n        label=\"Descrição 5\" />\r\n        <Field name=\"img\" component={this.renderInput} label=\"Insira a url da imagem OCC\" />\r\n        <button className=\"ui button primary\">Enviar</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst validate =(formValues) => {\r\n  const errors = {};\r\n  if (!formValues.title) {\r\n    errors.title = 'Você deve inserir um título'\r\n  }\r\n\r\n  if (!formValues.description1) {\r\n    errors.description1 = 'Você deve inserir a descrição 1'\r\n  }\r\n\r\n  if (!formValues.description2) {\r\n    errors.description2 = 'Você deve inserir a descrição 2'\r\n  }\r\n\r\n  if (!formValues.img) {\r\n    errors.img = 'Você deve inserir uma imagem válida do OCC'\r\n  }\r\n  return errors\r\n\r\n}\r\nexport default  reduxForm({\r\n  form: 'streamForm',\r\n  validate\r\n}) (StreamForm)\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamCreate extends React.Component {\r\n\r\n\r\n\r\n\r\n  onSubmit = (formValues) => {\r\n    this.props.createStream(formValues);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Criar um Componente</h3>\r\n        <StreamForm onSubmit={this.onSubmit}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(null, {createStream}) (StreamCreate);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nconst Modal = props => {\r\n  return ReactDOM.createPortal(\r\n    <div onClick={props.onDismiss} className=\"ui dimmer modals visible active\">\r\n      <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n        <div className=\"header\">{props.title}</div>\r\n        <div className=\"content\">\r\n        {props.content}\r\n        </div>\r\n        <div className=\"actions\">\r\n          {props.actions}\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.querySelector('#modal')\r\n\r\n  )\r\n}\r\n\r\nexport default Modal","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom';\r\nimport Modal from '../Modal';\r\nimport history from '../../history';\r\nimport {fetchStream, deleteStream} from '../../actions'\r\n\r\nclass StreamDelete extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchStream(this.props.match.params.id)\r\n  }\r\n\r\n  renderActions() {\r\n\r\n    const id = this.props.match.params.id\r\n  return (\r\n    <React.Fragment>\r\n      <button onClick={() => this.props.deleteStream(id)} className=\"ui button negative\">Deletar</button>\r\n      <Link to=\"/\" className=\"ui button\">Cancel </Link>\r\n\r\n    </React.Fragment>\r\n  )\r\n\r\n}\r\n\r\nrenderContent() {\r\n  if(!this.props.stream) {\r\n    return 'Você está certo de que quer deletar o componente:?'\r\n  }\r\n  return `Você está certo de que quer deletar o componente com o título: ${this.props.stream.title}`\r\n}\r\n  render() {\r\n  return (\r\n      <Modal\r\n        title=\"Deletar Componente\"\r\n        content={this.renderContent()}\r\n        actions={this.renderActions()}\r\n        onDismiss={() => history.push('/')}\r\n      />\r\n      \r\n  )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {stream: state.streams[ownProps.match.params.id]}\r\n}\r\nexport default connect(mapStateToProps, {fetchStream, deleteStream}) (StreamDelete)","import _ from 'lodash';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchStream, editStream} from '../../actions';\r\nimport StreamForm from './StreamForm';\r\nimport \"../../styles/Global.css\";\r\n\r\nclass StreamEdit extends React.Component {\r\n  componentDidMount()  {\r\n    this.props.fetchStream(this.props.match.params.id)\r\n  }\r\n\r\n  onSubmit = (formValues) => {\r\n    this.props.editStream(this.props.match.params.id, formValues)\r\n  }\r\nrender() {\r\n  if (!this.props.stream) {\r\n    return <div>Loading</div>\r\n  }\r\n  return (\r\n    <div>\r\n      <h3>Editar Componente</h3>\r\n      <StreamForm \r\n      initialValues={_.pick(this.props.stream, 'title', 'img',\r\n      'description1', 'description2', 'description3', 'description4', 'description5'\r\n      \r\n      )}\r\n      onSubmit={this.onSubmit}/>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {stream: state.streams[ownProps.match.params.id] }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchStream, editStream})(StreamEdit)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {fetchStreams} from '../../actions';\r\nimport \"../../styles/Global.css\";\r\n\r\nclass StreamList extends React.Component{\r\n  componentDidMount() {\r\n      this.props.fetchStreams()\r\n  }\r\n\r\n  renderAdmin(stream) {\r\n    if(stream.userId === this.props.currentUserId) {\r\n      return (\r\n        <div className=\"right floated content\">\r\n         <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Editar</Link>\r\n          <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">\r\n            Deletar\r\n          </Link>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  renderList() {\r\n    return this.props.streams.map(stream => {\r\n      return (\r\n        <div className=\"item\" key={stream.id}>\r\n           {this.renderAdmin(stream)}\r\n          <i className=\"large middle aligned\"/>\r\n          <div className=\"content\">\r\n            <Link to={`/streams/${stream.id}`} className=\"header\">\r\n            {stream.title}\r\n            </Link>\r\n            <img src={stream.img}/>\r\n            <div className=\"description\">\r\n              <p>{stream.description1}</p>\r\n              <p>{stream.description2}</p>\r\n              <p>{stream.description3}</p>\r\n              <p>{stream.description4}</p>\r\n              <p>{stream.description5}</p>\r\n            </div>\r\n\r\n            \r\n          </div>\r\n         \r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  renderCreate() {\r\n    if(this.props.isSignedIn) {\r\n      return (\r\n        <div style={{textAlign: 'right'}}>\r\n          <Link to=\"/streams/new\" className=\"ui button primary\" >\r\n            Criar um Componente\r\n          </Link>\r\n        </div>\r\n      )\r\n\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Midia Kit Livelo - Widgets</h2>\r\n        <div className=\"ui celled list\">{this.renderList()}</div>\r\n        {this.renderCreate()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {streams: Object.values(state.streams),\r\n          currentUserId: state.auth.userId,\r\n        isSignedIn: state.auth.isSignedIn}\r\n}  \r\nexport default connect(mapStateToProps, {fetchStreams}) (StreamList)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchStream} from '../../actions';\r\nimport \"../../styles/Global.css\";\r\n\r\nclass StreamShow extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchStream(this.props.match.params.id)\r\n  }\r\n  render() {\r\n    if(!this.props.stream) {\r\n      return <div>Loading...</div> \r\n    }\r\n\r\n    const {title, description1, description2, description3, description4, description5, img} = this.props.stream\r\n      return (\r\n        <div>\r\n          <h1>{title}</h1>\r\n          <img src={img} />\r\n          <p>{description1}</p>\r\n          <p>{description2}</p>\r\n          <p>{description3}</p>\r\n          <p>{description4}</p>\r\n          <p>{description5}</p>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {stream: state.streams[ownProps.match.params.id]}\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchStream}) (StreamShow)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {signIn, signOut} from '../actions';\r\n\r\n\r\nclass GoogleAuth extends React.Component {\r\n\r\n  componentDidMount() {\r\n    window.gapi.load('client:auth2', () => {\r\n      window.gapi.client.init({\r\n        clientId: '616158991092-dqk6lui6ul7t1a85sqksv8ntg4t36aqg.apps.googleusercontent.com',\r\n        scope: 'email'\r\n      }).then(() => {\r\n        this.auth = window.gapi.auth2.getAuthInstance();\r\n        this.onAuthChange(this.auth.isSignedIn.get());\r\n        this.auth.isSignedIn.listen(this.onAuthChange)\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  onAuthChange = (isSignedIn) => {\r\n   if(isSignedIn) {\r\n     this.props.signIn(this.auth.currentUser.get().getId());\r\n   } else {\r\n     this.props.signOut();\r\n   }\r\n  }\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn()\r\n  }\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut()\r\n  }\r\n\r\n  renderAuthButton() {\r\n    if(this.props.isSignedIn === null) {\r\n      return null;\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\r\n          <i className=\"google icon\"/>\r\n          Sair\r\n        </button>\r\n      )\r\n    } else {\r\n      return (\r\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\r\n        <i className=\"google icon\"/>\r\n        Logar com Google\r\n      </button>\r\n      )\r\n    }\r\n  }\r\n  render() {\r\n    return <div>{this.renderAuthButton()}</div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {isSignedIn: state.auth.isSignedIn}\r\n}\r\nexport default connect(mapStateToProps, {signIn, signOut}) (GoogleAuth)","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport GoogleAuth from './GoogleAuth';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"ui secondary pointing menu\">\r\n      <Link to=\"/\" className=\"item\">\r\n        Home\r\n      </Link>\r\n      <div className=\"right menu\">\r\n      <Link to=\"/\" className=\"item\">\r\n        Todos os Componentes\r\n      </Link>\r\n      <GoogleAuth/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport {Router, Route, Switch} from 'react-router-dom';\r\nimport StreamCreate from './streams/StreamCreate';\r\nimport StreamDelete from './streams/StreamDelete';\r\nimport StreamEdit from './streams/StreamEdit';\r\nimport StreamList from './streams/StreamList';\r\nimport StreamShow from './streams/StreamShow';\r\nimport Header from './Header';\r\nimport history from '../history'\r\nimport \"../styles/Global.css\"\r\n\r\nconst App = () => {\r\n  return (\r\n      <div className=\"ui container\">\r\n       \r\n        <Router history={history}>\r\n        <div>\r\n          <Header/>\r\n          <Switch>\r\n          <Route path=\"/\" exact component={StreamList} />\r\n          <Route path=\"/streams/new\" exact component={StreamCreate} />\r\n          <Route path=\"/streams/edit/:id\" exact component={StreamEdit} />\r\n          <Route path=\"/streams/delete/:id\" exact component={StreamDelete} />\r\n          <Route path=\"/streams/:id\" exact component={StreamShow} />\r\n          </Switch>\r\n        </div>\r\n        </Router>\r\n      </div>)\r\n}\r\n\r\nexport default App","import {SIGN_IN, SIGN_OUT} from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n  isSignedIn: null,\r\n  userId: null\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch(action.type) {\r\n    case SIGN_IN:\r\n      return {...state, isSignedIn: true, userId: action.payload}\r\n    case SIGN_OUT:\r\n      return {...state, isSignedIn: false, userId: null}\r\n    default:\r\n      return state\r\n  }\r\n\r\n}","import { combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport authReducer from './authReducer';\r\nimport streamReducer from './streamReducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  streams: streamReducer\r\n})","import _ from 'lodash';\r\n\r\nimport {\r\n  CREATE_STREAM,\r\n  FETCH_STREAMS,\r\n  FETCH_STREAM,\r\n  DELETE_STREAM,\r\n  EDIT_STREAM\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n  switch(action.type) {\r\n    case FETCH_STREAMS:\r\n      return {...state, ..._.mapKeys(action.payload, 'id')};\r\n    case FETCH_STREAM:\r\n      return {...state, [action.payload.id]: action.payload};\r\n    case CREATE_STREAM:\r\n        return {...state, [action.payload.id]: action.payload};\r\n    case EDIT_STREAM:\r\n          return {...state, [action.payload.id]: action.payload};\r\n    case DELETE_STREAM:\r\n          return _.omit(state, action.payload);\r\n    default:\r\n      return state\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk)) \r\n  );\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <App/>\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n  \r\n)\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}